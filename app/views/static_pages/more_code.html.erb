<br />
<div class="page-content">
  <h1 class="text-center">More Code</h1>
  <hr class="cme-more-code">
  <br class="clear" />
  <br />
  <div class=" more-code-show">
    <h4>A Deck of Cards</h4>
      <p>This Ruby program builds a deck of cards. It shuffles them and takes user input to determine how many cards should be dealt into a hand.</p>

    <br class="clear" /><br />
    <div class="more-code">
      <pre><code class="language-ruby">puts &quot;How many cards go into a hand for your game?&quot;
      hand_cards = gets.chomp.to_i
      message = &quot;Your #{hand_cards} hand has been dealt. Enjoy the game!&quot;
      puts message

      class Card
        attr_accessor :rank, :suit
        
        def initialize(rank, suit)
          @rank = rank
          @suit = suit
        end

        def card_dealt
          if self.rank == 1
            puts &quot;The Ace of #{self.suit}&quot;
          elsif self.rank == 11
            puts &quot;The Jack of #{self.suit}&quot;
          elsif self.rank == 12
            puts &quot;The Queen of #{self.suit}&quot;
          elsif self.rank == 13
            puts &quot;The King of #{self.suit}&quot;
          else
            puts &quot;The #{self.rank} of #{self.suit}&quot;
          end
        end

        def self.random_card
          Card.new(rand(1..13), :suit)  
        end
      end

      class Deck
        def initialize
          @rank = [*(1..13)]
          @suit = [&quot;Clubs&quot;, &quot;Spades&quot;, &quot;Diamonds&quot;, &quot;Hearts&quot;]
          @cards = []
          @rank.each do |rank|
            @suit.each do |suit|
              @cards &lt;&lt; Card.new(rank, suit)
            end
          end
        end
        def shuffle
          @cards.shuffle!
        end
        def card_dealt
          @cards.each do |card|
            card.card_dealt
          end
        end
        def deal(hand_cards)
          hand_cards.times do
            @cards.shift.card_dealt
          end
        end
      end
      deck = Deck.new
      deck.shuffle
      deck.deal(hand_cards)</code></pre>
    </div>
  </div>
  <br class="clear" />
<hr />
 <br />
  <div class=" more-code-show">
    <h4>The Fibonacci Sequence (2 ways)</h4>
      <p>This Ruby program calculates the Fibonacci Sequence in a recursive way and an iterative way.</p>

    <br class="clear" /><br />
    <div class="more-code">
      <pre><code class="language-ruby"># Recursive Fibonacci Sequence

def recursive_fib(num)
  return  num if num <= 1  
  recursive_fib(num - 1) + recursive_fib(num - 2)
end 

#########################################################################

# Iterative Fibonacci Sequence

def iterative_fib(num)
  num1 = 0
  num2 = 1
  num.times do
    x = num1 
    num1 = num2
    num2 = x + num2
  end
  return num1
end

puts choose a number...
num = gets.chomp.to_i
puts "Recursive Fibonacci Sequence"
puts recursive_fib(num)
puts "-----"
puts "Iterative Fibonacci Sequence"
puts iterative_fib(num)
</code></pre>
    </div>
  </div>
  <br class="clear" />
</div> 

<br />
<br />
<br />
<br />
<br />
<br />